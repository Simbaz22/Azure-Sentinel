name: Import-AzSentinelAlertRule to 'test-sentinel'
# Note: This workflow will deploy everything in the root directory.
# To deploy content only from a specific path (for example SentinelContent):
#   1. Add the target path to the "paths" property like such
#    paths:
#    - 'SentinelContent/**'
#    - '!.github/workflows/**'
#    - '.github/workflows/sentinel-deploy-dbe31290-c762-4e8d-8e08-cdbd06a52bb6.yml'
#   2. Append the path to the directory environment variable below
#       directory: '${{ github.workspace }}/SentinelContent'

on: 
  push:
    branches: [ main ]
    paths:
    - '!.github/workflows/**'  # this filter prevents other workflow changes from triggering this workflow
    - '.github/workflows/Import-AzSentinelAlertRule.yml'
    - 'azure-sentinel/**'
    
  workflow_dispatch:

jobs:
  deploy-content:
    runs-on: ubuntu-latest
    env:
      resourceGroupName: 'sentinel-test'
      workspaceName: 'test-sentinel'
      directory: '${{ github.workspace }}'
      cloudEnv: 'AzureCloud'
      creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_dbe31290c7624e8d8e08cdbd06a52bb6 }}
      contentTypes: 'AnalyticsRule,AutomationRule,HuntingQuery,Parser,Playbook,Workbook'
      AZURE_SUBSCRIPTION_ID: '27889476-8bae-4075-b04c-1a9aa8bffab5'  # set this to your Azure Subscription Id
      AZURE_RESOURCE_GROUP: 'sentinel-test'   # set this to your target resource group

    steps:
    - name: Login to Azure (Attempt 1)
      continue-on-error: true
      id: login1
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_dbe31290c7624e8d8e08cdbd06a52bb6 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 1 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 2)
      continue-on-error: true
      id: login2
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login1.outcome=='failure' }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_dbe31290c7624e8d8e08cdbd06a52bb6 }}
        enable-AzPSSession: true

    - name: Wait 30 seconds if login attempt 2 failed
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure' }}
      run: powershell Start-Sleep -s 30
    
    - name: Login to Azure (Attempt 3)
      continue-on-error: false
      id: login3
      uses: azure/login@v1
      if: ${{ env.cloudEnv == 'AzureCloud' && steps.login2.outcome=='failure'  }}
      with:
        creds: ${{ secrets.AZURE_SENTINEL_CREDENTIALS_dbe31290c7624e8d8e08cdbd06a52bb6 }}
        enable-AzPSSession: true

    - name: Checkout
      uses: actions/checkout@v1
    
    - name: 'Prepare environemnt'
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          Install-Module AzSentinel -Scope CurrentUser -Force
          Import-Module AzSentinel
      pwsh: true
    
    - name: Deploy Content to Azure Sentinel
      uses: azure/powershell@v1
      with:
        azPSVersion: 'latest'
        inlineScript: |
          ${{ github.workspace }}//.github/workflows/azure-sentinel-deploy-dbe31290-c762-4e8d-8e08-cdbd06a52bb6.ps1  
  
    
              
    - Name: 'Create and Update Alert Rules'
      uses: azure/powershell@v1
      with:
        azureSubscription:  ${{ env.AZURE_SUBSCRIPTION_ID }}
        ScriptType: 'InlineScript'
        inlineScript: |
         ./Import-AzSentinelAlertRule.ps1
          Install-Module ./Import-AzSentinelAlertRule.ps1
          Import-AzSentinelAlertRule -SubscriptionId  ${{ env.AZURE_SUBSCRIPTION_ID }} -WorkspaceName 'test-sentinel'-SettingsFile ${{ github.workspace }}//azure-sentinel
        azurePowerShellVersion: 'LatestVersion'
        pwsh: true
